# See https://docs.github.com/get-started/getting-started-with-git/ignoring-files for more about ignoring files.

# Compiled output
/dist
/tmp
/out-tsc
/bazel-out

# Node
/node_modules
npm-debug.log
yarn-error.log

# IDEs and editors
.idea/
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.history/*

# Miscellaneous
/.angular/cache
.sass-cache/
/connect.lock
/coverage
/libpeerconnection.log
testem.log
/typings

# System files
.DS_Store
Thumbs.db

#Angular Topic To Cover
components
directives
pipes
services
guards
interceptors
modules
routes
reactive-forms vs template-driven forms
state management
dependency injection
lazy loading
change detection
observables vs promises
routing and navigation
custome pipes
custom directives


#What is the difference between template-driven forms and reactive forms?
Template-driven forms use Angularâ€™s two-way data binding and are mostly written in the HTML template, 
while reactive forms are more programmatic and allow for more complex validation and dynamic form controls. Reactive forms are built using the `FormControl`, `FormGroup`, and `FormArray` classes, providing a more structured approach to form management.
in template-driven forms, the form controls are created in the template using directives like `ngModel`, while in reactive forms, the form controls are created in the component class and bound to the template using the `formControlName` directive.